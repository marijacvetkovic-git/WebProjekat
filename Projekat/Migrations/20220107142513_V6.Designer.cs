// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20220107142513_V6")]
    partial class V6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Dekoracija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Boja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Dekoracije");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojGostiju")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KlijenticId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SalicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KlijenticId");

                    b.HasIndex("SalicaID");

                    b.ToTable("Dogadjaji");
                });

            modelBuilder.Entity("Models.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTel")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("ImeKlijenta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrezimeKlijenta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("Models.Pozivnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Dosao")
                        .HasColumnType("bit");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PozivnicaDogadjajID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PozivnicaDogadjajID");

                    b.ToTable("Pozivnice");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMesta")
                        .HasColumnType("int");

                    b.Property<int>("CenaPoMestu")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DekoracijaID")
                        .HasColumnType("int");

                    b.Property<int?>("DogadjajID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DekoracijaID");

                    b.HasIndex("DogadjajID");

                    b.ToTable("Spojevi");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.HasOne("Models.Klijent", "Klijentic")
                        .WithMany("KlijentDogadjaj")
                        .HasForeignKey("KlijenticId");

                    b.HasOne("Models.Sala", "Salica")
                        .WithMany("Dogadjaji")
                        .HasForeignKey("SalicaID");

                    b.Navigation("Klijentic");

                    b.Navigation("Salica");
                });

            modelBuilder.Entity("Models.Pozivnica", b =>
                {
                    b.HasOne("Models.Dogadjaj", "PozivnicaDogadjaj")
                        .WithMany("DogadjajPozivnica")
                        .HasForeignKey("PozivnicaDogadjajID");

                    b.Navigation("PozivnicaDogadjaj");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.HasOne("Models.Dekoracija", "Dekoracija")
                        .WithMany("DekoracijaDogadjaj")
                        .HasForeignKey("DekoracijaID");

                    b.HasOne("Models.Dogadjaj", "Dogadjaj")
                        .WithMany("DogadjajDekoracija")
                        .HasForeignKey("DogadjajID");

                    b.Navigation("Dekoracija");

                    b.Navigation("Dogadjaj");
                });

            modelBuilder.Entity("Models.Dekoracija", b =>
                {
                    b.Navigation("DekoracijaDogadjaj");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.Navigation("DogadjajDekoracija");

                    b.Navigation("DogadjajPozivnica");
                });

            modelBuilder.Entity("Models.Klijent", b =>
                {
                    b.Navigation("KlijentDogadjaj");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Navigation("Dogadjaji");
                });
#pragma warning restore 612, 618
        }
    }
}
